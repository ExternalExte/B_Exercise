name: proveCI
on: push
env:
  ARCH: x64
jobs:
  test-job:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Changed Source Files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            **.mch

      - name: List all changed files .mch files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Create image tag
        id: image_tag
        run: |
          # Define cache dir
          CACHE_PATH="/tmp/docker_cache_${{ env.ARCH }}"
          # Get Dockerfile hash for image cache
          IMAGE_HASH="${{ hashFiles('./prove/Dockerfile') }}"
          # Create image tag
          VARIANT="$(TZ=UTC-9 date +%Y%m%d)_${IMAGE_HASH:0:7}"
          IMAGE_NAME="bbatch_prove_${{ env.ARCH }}"
          TAG="${IMAGE_NAME}:${VARIANT}"
          # Cache dir setting
          TAR_NAME="${IMAGE_NAME}_${VARIANT}.tar"
          TAR_PATH="${CACHE_PATH}/${TAR_NAME}"
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "TAR_PATH=${TAR_PATH}" >> $GITHUB_OUTPUT
          echo "CACHE_PATH=${CACHE_PATH}" >> $GITHUB_OUTPUT
          echo "CACHE_KEY=${IMAGE_NAME}_${VARIANT}" >> $GITHUB_OUTPUT

      - name: Enable cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.image_tag.outputs.CACHE_PATH }}
          key: ${{ steps.image_tag.outputs.CACHE_KEY }}

      - name: Load image from cache if exists
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          docker load -i ${{ steps.image_tag.outputs.TAR_PATH }}

      - name: Build image if cache does not exist
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          docker build -t ${{ steps.image_tag.outputs.TAG }} prove
          mkdir -p ${{ steps.image_tag.outputs.CACHE_PATH }}
          docker save ${{ steps.image_tag.outputs.TAG }} > ${{ steps.image_tag.outputs.TAR_PATH }}

      - name: Run step if source file(s) change
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # Change owner of workspace to ubuntu user
          sudo chown -R 1000:1000 ${{ github.workspace }}
          docker run --rm -v ${{ github.workspace }}:/repository ${{ steps.image_tag.outputs.TAG }} ${{steps.changed-files.outputs.all_changed_files}}
